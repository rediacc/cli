# Negative tests for invalid operations
name: "Invalid Operations Test"
description: "Test error handling for invalid operations and data"
tags: [negative, error-handling, validation]

dependencies:
  company: "TestCompany"

steps:
  # Test 1: Create team with invalid name
  - action: create
    entity: team
    params:
      name: "invalid team name with spaces!"
      company: "{{ company }}"
    expect:
      success: false
      error_contains: "Invalid name"

  # Test 2: Create machine without required dependencies
  - action: create
    entity: machine
    params:
      name: "orphan_machine"
      team: "non_existent_team"
      bridge: "non_existent_bridge"
    expect:
      success: false
      error_contains: "not found"

  # Test 3: Create entity with empty name
  - action: create
    entity: region
    params:
      name: ""
      company: "{{ company }}"
    expect:
      success: false
      error_contains: "required"

  # Test 4: Update non-existent entity
  - action: update
    entity: team
    params:
      name: "does_not_exist"
      vault:
        key: "value"
    expect:
      success: false
      error_contains: "not found"

  # Test 5: Create queue item with invalid priority
  - action: create
    entity: queue_item
    params:
      team: "{{ company }}"
      machine: "test_machine"
      function: "test"
      priority: 10  # Should be 1-5
    expect:
      success: false
      error_contains: "priority"

  # Test 6: Delete non-existent entity
  - action: delete
    entity: team
    params:
      name: "team_that_does_not_exist"
    expect:
      success: false
      error_contains: "not found"

# No cleanup needed for negative tests