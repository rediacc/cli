# Basic CRUD test for storage
name: "Storage CRUD Operations"
description: "Test create, read, update, delete operations for storage"
tags: [storage, crud, basic]

dependencies:
  company: "TestCompany"
  team: "auto"  # Will create a team automatically

setup:
  - create_random_team_name: team_name
  - create_random_storage_name: storage_name

steps:
  # Create team first (storage requires team)
  - action: create
    entity: team
    params:
      name: "{{ team_name }}"
    expect:
      success: true

  # Create storage
  - action: create
    entity: storage
    params:
      team: "{{ team_name }}"
      name: "{{ storage_name }}"
      vault: {}
    expect:
      success: true
    capture:
      storage_id: "$.id"

  # List storages for team
  # Note: The framework doesn't support the 'list' action yet
  # We'll skip this step and use verify instead

  # Verify storage exists
  - action: verify
    entity: storage
    params:
      team: "{{ team_name }}"
      name: "{{ storage_name }}"
    expect:
      storageName: "{{ storage_name }}"
      teamName: "{{ team_name }}"

  # Update storage name
  - action: update
    entity: storage
    params:
      team: "{{ team_name }}"
      name: "{{ storage_name }}"
      new_name: "{{ storage_name }}_updated"
    expect:
      success: true

  # Update storage name in context for subsequent operations
  # Note: The framework doesn't support set_variable action in steps
  # We'll use the updated name directly in following steps

  # Update storage vault - using the updated name
  - action: update
    entity: storage
    params:
      team: "{{ team_name }}"
      name: "{{ storage_name }}_updated"
      vault:
        storage_config:
          type: "s3"
          bucket: "test-bucket"
          region: "us-east-1"
      vault_version: 2
    expect:
      success: true

  # Verify storage still exists after update
  - action: verify
    entity: storage
    params:
      team: "{{ team_name }}"
      name: "{{ storage_name }}_updated"
    expect:
      storageName: "{{ storage_name }}_updated"
      teamName: "{{ team_name }}"

cleanup:
  - action: delete
    entity: storage
    params:
      team: "{{ team_name }}"
      name: "{{ storage_name }}_updated"
  - action: delete
    entity: team
    params:
      name: "{{ team_name }}"