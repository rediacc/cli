name: SCHEDULES_TEST
description: Test schedule creation, update, and deletion
executor: "commands/cli.py"
setup:
- name: create_test_company
  command:
  - CreateNewCompany
  args:
    companyName: ScheduleCompany-${TIMESTAMP}
    email: schedule-admin-${TIMESTAMP}@test.com
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: activate_user_account
  command:
  - ActivateUserAccount
  args:
    email: schedule-admin-${TIMESTAMP}@test.com
    activationCode: ${config.test_environment.activation_code}
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: login_as_admin
  command:
  - CreateAuthenticationRequest
  args:
    email: schedule-admin-${TIMESTAMP}@test.com
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: create_test_team
  command:
  - CreateTeam
  args:
    teamName: ScheduleTeam-${TIMESTAMP}
    teamVault: '{}'
  expect:
    success: true
chain_export:
  test_schedule_name: ${config.test_data.schedule.name_pattern}
  test_team_name: ScheduleTeam-${TIMESTAMP}
tests:
- name: create_backup_schedule
  command:
  - CreateSchedule
  args:
    teamName: ScheduleTeam-${TIMESTAMP}
    scheduleName: ${config.test_data.schedule.name_pattern}
    scheduleVault: '{"CRON": "0 2 * * *", "FUNCTION": "backup", "TARGET_REPOSITORY":
      "main-app", "STORAGE": "s3-backup", "ENABLED": "true"}'
  expect:
    success: true
- name: create_cleanup_schedule
  command:
  - CreateSchedule
  args:
    teamName: ScheduleTeam-${TIMESTAMP}
    scheduleName: ${config.test_data.schedule.name_pattern}-cleanup
    scheduleVault: '{"CRON": "0 4 * * 0", "FUNCTION": "cleanup", "RETENTION_DAYS":
      "30", "ENABLED": "false"}'
  expect:
    success: true
- name: list_team_schedules
  command:
  - GetTeamSchedules
  args:
    teamName: ScheduleTeam-${TIMESTAMP}
  expect:
    success: true
    output_contains:
    - ${config.test_data.schedule.name_pattern}
    - ${config.test_data.schedule.name_pattern}-cleanup
- name: update_schedule_name
  command:
  - UpdateScheduleName
  args:
    teamName: ScheduleTeam-${TIMESTAMP}
    currentScheduleName: ${config.test_data.schedule.name_pattern}
    newScheduleName: Updated-${config.test_data.schedule.name_pattern}
  expect:
    success: true
- name: delete_cleanup_schedule
  command:
  - DeleteSchedule
  args:
    teamName: ScheduleTeam-${TIMESTAMP}
    scheduleName: ${config.test_data.schedule.name_pattern}-cleanup
  expect:
    success: true
- name: delete_backup_schedule
  command:
  - DeleteSchedule
  args:
    teamName: ScheduleTeam-${TIMESTAMP}
    scheduleName: Updated-${config.test_data.schedule.name_pattern}
  expect:
    success: true
- name: verify_cleanup_context
  command:
  - GetUserCompany
  expect:
    success: true
  description: Verify we're still authenticated before logout
- name: logout
  command:
  - DeleteUserRequest
  expect:
    success: true
  description: Logout and invalidate authentication token
