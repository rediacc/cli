name: "USER_MANAGEMENT_ADVANCED_TEST"
description: "Test advanced user management operations"
executor: "rediacc-cli.py"

# Setup authentication with test user
setup:
  - name: "create_test_company"
    command: ["CreateNewCompany"]
    args:
      companyName: "UserAdvTestCompany-${TIMESTAMP}"
      email: "useradvtest-${TIMESTAMP}@test.com"
      password: "Test@Pass123!"
    expect:
      success: true
  
  - name: "activate_account"
    command: ["ActivateUserAccount"]
    args:
      email: "useradvtest-${TIMESTAMP}@test.com"
      activationCode: "111111"
      password: "Test@Pass123!"
    expect:
      success: true
  
  - name: "login_admin"
    command: ["login"]
    args:
      email: "useradvtest-${TIMESTAMP}@test.com"
      password: "Test@Pass123!"
    expect:
      success: true

# Tests advanced user management endpoints
# Note: Most user update operations require password hashes or complex parameters
# Testing basic user info retrieval instead

tests:
  # Get user company info
  - name: "get_user_company"
    command: ["GetUserCompany"]
    expect:
      success: true
      output_contains: "UserAdvTestCompany-${TIMESTAMP}"
    description: "Get user company information"
  
  # Get user requests/sessions
  - name: "get_user_requests"
    command: ["GetUserRequests"]
    expect:
      success: true
      output_contains: "useradvtest-${TIMESTAMP}@test.com"
    description: "Get user authentication requests"