name: STORAGE_TEST
description: Test storage creation, update, and deletion
executor: "commands/cli_main.py"
setup:
- name: create_test_company
  command:
  - CreateNewCompany
  args:
    companyName: StorageCompany-${TIMESTAMP}
    email: storage-admin-${TIMESTAMP}@test.com
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: activate_user_account
  command:
  - ActivateUserAccount
  args:
    email: storage-admin-${TIMESTAMP}@test.com
    activationCode: ${config.test_environment.activation_code}
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: login_as_admin
  command:
  - CreateAuthenticationRequest
  args:
    email: storage-admin-${TIMESTAMP}@test.com
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: create_test_team
  command:
  - CreateTeam
  args:
    teamName: StorageTeam-${TIMESTAMP}
    teamVault: '{}'
  expect:
    success: true
chain_export:
  test_storage_name: ${config.test_data.storage.name_pattern}
  test_team_name: StorageTeam-${TIMESTAMP}
tests:
- name: create_storage
  command:
  - CreateStorage
  args:
    teamName: StorageTeam-${TIMESTAMP}
    storageName: ${config.test_data.storage.name_pattern}
    storageVault: '{"TYPE": "S3", "BUCKET": "test-bucket", "REGION": "us-east-1",
      "ACCESS_KEY_ID": "test-key", "SECRET_ACCESS_KEY": "test-secret"}'
  expect:
    success: true
- name: create_backup_storage
  command:
  - CreateStorage
  args:
    teamName: StorageTeam-${TIMESTAMP}
    storageName: ${config.test_data.storage.name_pattern}-backup
    storageVault: '{"TYPE": "LOCAL", "PATH": "/mnt/backup", "MAX_SIZE": "100G"}'
  expect:
    success: true
- name: list_team_storages
  command:
  - GetTeamStorages
  args:
    teamName: StorageTeam-${TIMESTAMP}
  expect:
    success: true
    output_contains:
    - ${config.test_data.storage.name_pattern}
    - ${config.test_data.storage.name_pattern}-backup
- name: update_storage_name
  command:
  - UpdateStorageName
  args:
    teamName: StorageTeam-${TIMESTAMP}
    currentStorageName: ${config.test_data.storage.name_pattern}
    newStorageName: Updated-${config.test_data.storage.name_pattern}
  expect:
    success: true
- name: delete_backup_storage
  command:
  - DeleteStorage
  args:
    teamName: StorageTeam-${TIMESTAMP}
    storageName: ${config.test_data.storage.name_pattern}-backup
  expect:
    success: true
- name: delete_main_storage
  command:
  - DeleteStorage
  args:
    teamName: StorageTeam-${TIMESTAMP}
    storageName: Updated-${config.test_data.storage.name_pattern}
  expect:
    success: true
- name: verify_cleanup_context
  command:
  - GetUserCompany
  expect:
    success: true
  description: Verify we're still authenticated before logout
- name: logout
  command:
  - DeleteUserRequest
  expect:
    success: true
  description: Logout and invalidate authentication token
