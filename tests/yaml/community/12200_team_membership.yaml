name: TEAM_MEMBERSHIP_TEST
description: Test team membership operations - add and remove users from teams
executor: "commands/cli_main.py"
setup:
- name: create_test_company
  command:
  - CreateNewCompany
  args:
    companyName: TeamMemberCompany-${TIMESTAMP}
    email: teammember-admin-${TIMESTAMP}@test.com
    password: Test@Pass123!
    subscriptionPlan: PREMIUM
  expect:
    success: true
- name: activate_admin_account
  command:
  - ActivateUserAccount
  args:
    email: teammember-admin-${TIMESTAMP}@test.com
    activationCode: '111111'
    password: Test@Pass123!
  expect:
    success: true
- name: login_as_admin
  command:
  - CreateAuthenticationRequest
  args:
    email: teammember-admin-${TIMESTAMP}@test.com
    password: Test@Pass123!
  expect:
    success: true
tests:
- name: create_team_alpha
  command:
  - CreateTeam
  args:
    teamName: TeamAlpha-${TIMESTAMP}
    teamVault: '{"description": "Alpha team for testing"}'
  expect:
    success: true
- name: create_team_beta
  command:
  - CreateTeam
  args:
    teamName: TeamBeta-${TIMESTAMP}
    teamVault: '{"description": "Beta team for testing"}'
  expect:
    success: true
- name: create_user1
  command:
  - CreateNewUser
  args:
    newUserEmail: teamuser1-${TIMESTAMP}@test.com
    newUserHash: '0x5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5'
  expect:
    success: true
- name: activate_user1
  command:
  - ActivateUserAccount
  args:
    email: teamuser1-${TIMESTAMP}@test.com
    activationCode: '111111'
    password: Test@Pass456!
  expect:
    success: true
- name: create_user2
  command:
  - CreateNewUser
  args:
    newUserEmail: teamuser2-${TIMESTAMP}@test.com
    newUserHash: '0x5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5'
  expect:
    success: true
- name: activate_user2
  command:
  - ActivateUserAccount
  args:
    email: teamuser2-${TIMESTAMP}@test.com
    activationCode: '111111'
    password: Test@Pass789!
  expect:
    success: true
- name: add_user1_to_team_alpha
  command:
  - CreateTeamMembership
  args:
    teamName: TeamAlpha-${TIMESTAMP}
    newUserEmail: teamuser1-${TIMESTAMP}@test.com
  expect:
    success: true
  description: Add user1 to TeamAlpha
- name: add_user2_to_team_alpha
  command:
  - CreateTeamMembership
  args:
    teamName: TeamAlpha-${TIMESTAMP}
    newUserEmail: teamuser2-${TIMESTAMP}@test.com
  expect:
    success: true
  description: Add user2 to TeamAlpha
- name: add_user1_to_team_beta
  command:
  - CreateTeamMembership
  args:
    teamName: TeamBeta-${TIMESTAMP}
    newUserEmail: teamuser1-${TIMESTAMP}@test.com
  expect:
    success: true
  description: Add user1 to TeamBeta
- name: get_team_alpha_members
  command:
  - GetTeamMembers
  args:
    teamName: TeamAlpha-${TIMESTAMP}
  expect:
    success: true
    output_contains:
    - teamuser1-${TIMESTAMP}@test.com
    - teamuser2-${TIMESTAMP}@test.com
  description: Verify TeamAlpha members
- name: get_team_beta_members
  command:
  - GetTeamMembers
  args:
    teamName: TeamBeta-${TIMESTAMP}
  expect:
    success: true
    output_contains: teamuser1-${TIMESTAMP}@test.com
  description: Verify TeamBeta members
- name: remove_user2_from_team_alpha
  command:
  - DeleteUserFromTeam
  args:
    teamName: TeamAlpha-${TIMESTAMP}
    removeUserEmail: teamuser2-${TIMESTAMP}@test.com
  expect:
    success: true
  description: Remove user2 from TeamAlpha
- name: verify_user2_removed
  command:
  - GetTeamMembers
  args:
    teamName: TeamAlpha-${TIMESTAMP}
  expect:
    success: true
    output_contains: teamuser1-${TIMESTAMP}@test.com
    output_not_contains: teamuser2-${TIMESTAMP}@test.com
  description: Verify user2 was removed from TeamAlpha
- name: try_add_to_nonexistent_team
  command:
  - CreateTeamMembership
  args:
    teamName: NonExistentTeam
    newUserEmail: teamuser1-${TIMESTAMP}@test.com
  expect:
    success: false
  description: Attempt to add user to non-existent team
- name: try_remove_non_member
  command:
  - DeleteUserFromTeam
  args:
    teamName: TeamBeta-${TIMESTAMP}
    removeUserEmail: teamuser2-${TIMESTAMP}@test.com
  expect:
    success: false
  description: Attempt to remove user who is not a team member
- name: delete_team_alpha
  command:
  - DeleteTeam
  args:
    teamName: TeamAlpha-${TIMESTAMP}
  expect:
    success: true
- name: delete_team_beta
  command:
  - DeleteTeam
  args:
    teamName: TeamBeta-${TIMESTAMP}
  expect:
    success: true
- name: verify_cleanup_context
  command:
  - GetUserCompany
  expect:
    success: true
  description: Verify we're still authenticated before logout
- name: logout
  command:
  - DeleteUserRequest
  expect:
    success: true
  description: Logout and invalidate authentication token
