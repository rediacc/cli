name: "BRIDGES_TEST"
description: "Test bridge creation, renaming, and operations"
executor: "rediacc-cli.py"

# Export data to chain context for use in subsequent test files
# Note: This test assumes regions test has been run and creates a region
chain_export:
  test_bridge_name: "${config.test_data.bridge.name_pattern}"
  test_region_for_bridge: "BridgeTestRegion-${TIMESTAMP}_${TEST_ID}"

tests:
  - name: "create_region_for_bridge"
    command: ["CreateRegion"]
    args:
      regionName: "BridgeTestRegion-${TIMESTAMP}_${TEST_ID}"
      regionVault: "{\"provider\": \"aws\", \"zone\": \"us-west-2\"}"
    expect:
      success: true
      
  - name: "create_bridge"
    command: ["CreateBridge"]
    args:
      regionName: "BridgeTestRegion-${TIMESTAMP}_${TEST_ID}"
      bridgeName: "${config.test_data.bridge.name_pattern}"
      bridgeVault: "{\"batch_size\": \"5\", \"timeout\": \"300\"}"
    expect:
      success: true
  
  - name: "update_bridge_name"
    command: ["UpdateBridgeName"]
    args:
      regionName: "BridgeTestRegion-${TIMESTAMP}_${TEST_ID}"
      currentBridgeName: "${config.test_data.bridge.name_pattern}"
      newBridgeName: "Updated-${config.test_data.bridge.name_pattern}"
    expect:
      success: true
  
  # Note: list bridges requires a region parameter, so we'll skip the "list all" test
  
  - name: "list_region_bridges"
    command: ["GetRegionBridges"]
    args:
      regionName: "BridgeTestRegion-${TIMESTAMP}_${TEST_ID}"
    expect:
      success: true
      output_contains:
        - "Updated-${config.test_data.bridge.name_pattern}"