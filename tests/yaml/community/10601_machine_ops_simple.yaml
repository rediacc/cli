name: MACHINE_OPS_SIMPLE_TEST
description: Simplified test for machine operations
executor: "commands/cli.py"
setup:
- name: create_test_company
  command:
  - CreateNewCompany
  args:
    companyName: MachineOpsCompany-${TIMESTAMP}
    email: machineops-admin-${TIMESTAMP}@test.com
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: activate_user_account
  command:
  - ActivateUserAccount
  args:
    email: machineops-admin-${TIMESTAMP}@test.com
    activationCode: ${config.test_environment.activation_code}
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: login_as_admin
  command:
  - CreateAuthenticationRequest
  args:
    email: machineops-admin-${TIMESTAMP}@test.com
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
tests:
- name: create_ops_team
  command:
  - CreateTeam
  args:
    teamName: OpsTeam-${TIMESTAMP}
    teamVault: '{}'
  expect:
    success: true
- name: create_ops_region
  command:
  - CreateRegion
  args:
    regionName: OpsRegion-${TIMESTAMP}
    regionVault: '{}'
  expect:
    success: true
- name: create_ops_bridge
  command:
  - CreateBridge
  args:
    regionName: OpsRegion-${TIMESTAMP}
    bridgeName: OpsBridge-${TIMESTAMP}
    bridgeVault: '{}'
  expect:
    success: true
- name: create_ops_machine
  command:
  - CreateMachine
  args:
    teamName: OpsTeam-${TIMESTAMP}
    bridgeName: OpsBridge-${TIMESTAMP}
    machineName: OpsMachine-${TIMESTAMP}
    machineVault: '{"ip": "10.0.0.1"}'
  expect:
    success: true
- name: update_machine_status
  command:
  - UpdateMachineStatus
  args:
    teamName: OpsTeam-${TIMESTAMP}
    machineName: OpsMachine-${TIMESTAMP}
    machineStatus: maintenance
  expect:
    success: true
- name: get_assignment_status
  command:
  - GetMachineAssignmentStatus
  args:
    teamName: OpsTeam-${TIMESTAMP}
    machineName: OpsMachine-${TIMESTAMP}
  expect:
    success: true
- name: get_clone_machines
  command:
  - GetAvailableMachinesForClone
  args:
    teamName: OpsTeam-${TIMESTAMP}
  expect:
    success: true
- name: delete_ops_machine
  command:
  - DeleteMachine
  args:
    teamName: OpsTeam-${TIMESTAMP}
    machineName: OpsMachine-${TIMESTAMP}
  expect:
    success: true
- name: delete_ops_bridge
  command:
  - DeleteBridge
  args:
    regionName: OpsRegion-${TIMESTAMP}
    bridgeName: OpsBridge-${TIMESTAMP}
  expect:
    success: true
- name: delete_ops_region
  command:
  - DeleteRegion
  args:
    regionName: OpsRegion-${TIMESTAMP}
  expect:
    success: true
- name: delete_ops_team
  command:
  - DeleteTeam
  args:
    teamName: OpsTeam-${TIMESTAMP}
  expect:
    success: true
- name: verify_cleanup_context
  command:
  - GetUserCompany
  expect:
    success: true
  description: Verify we're still authenticated before logout
- name: logout
  command:
  - DeleteUserRequest
  expect:
    success: true
  description: Logout and invalidate authentication token
