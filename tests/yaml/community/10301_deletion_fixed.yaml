name: "DELETION_FIXED_TEST"
description: "Fixed test for resource deletion endpoints"
executor: "rediacc-cli.py"

# Tests deletion endpoints - assumes existing infrastructure from earlier tests

tests:
  # Create minimal resources for deletion testing
  - name: "create_test_team"
    command: ["CreateTeam"]
    args:
      teamName: "DeleteTestTeam-${TIMESTAMP}_${TEST_ID}"
      teamVault: '{}'
    expect:
      success: true
  
  - name: "create_test_region"
    command: ["CreateRegion"]
    args:
      regionName: "DeleteTestRegion-${TIMESTAMP}_${TEST_ID}"
      regionVault: '{}'
    expect:
      success: true
  
  - name: "create_test_bridge"
    command: ["CreateBridge"]
    args:
      regionName: "DeleteTestRegion-${TIMESTAMP}_${TEST_ID}"
      bridgeName: "DeleteTestBridge-${TIMESTAMP}_${TEST_ID}"
      bridgeVault: '{}'
    expect:
      success: true
  
  - name: "create_test_machine"
    command: ["CreateMachine"]
    args:
      teamName: "DeleteTestTeam-${TIMESTAMP}_${TEST_ID}"
      bridgeName: "DeleteTestBridge-${TIMESTAMP}_${TEST_ID}"
      machineName: "DeleteTestMachine-${TIMESTAMP}_${TEST_ID}"
      machineVault: '{"ip": "10.0.0.1", "user": "test", "datastore": "/mnt/data"}'
    expect:
      success: true
  
  # Delete machine first (no dependencies)
  - name: "delete_machine"
    command: ["DeleteMachine"]
    args:
      teamName: "DeleteTestTeam-${TIMESTAMP}_${TEST_ID}"
      machineName: "DeleteTestMachine-${TIMESTAMP}_${TEST_ID}"
    expect:
      success: true
  
  # Delete bridge after machines are removed
  - name: "delete_bridge"
    command: ["DeleteBridge"]
    args:
      regionName: "DeleteTestRegion-${TIMESTAMP}_${TEST_ID}"
      bridgeName: "DeleteTestBridge-${TIMESTAMP}_${TEST_ID}"
    expect:
      success: true
  
  # Delete region after bridges are removed
  - name: "delete_region"
    command: ["DeleteRegion"]
    args:
      regionName: "DeleteTestRegion-${TIMESTAMP}_${TEST_ID}"
    expect:
      success: true
  
  # Delete team after machines are removed
  - name: "delete_team"
    command: ["DeleteTeam"]
    args:
      teamName: "DeleteTestTeam-${TIMESTAMP}_${TEST_ID}"
    expect:
      success: true