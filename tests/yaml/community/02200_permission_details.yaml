name: PERMISSION_DETAILS_TEST
description: Test retrieving permission group details
executor: "commands/cli_main.py"
setup:
- name: create_test_company
  command:
  - CreateNewCompany
  args:
    companyName: PermDetails2Company-${TIMESTAMP}
    email: permdetails2-admin-${TIMESTAMP}@test.com
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: activate_user_account
  command:
  - ActivateUserAccount
  args:
    email: permdetails2-admin-${TIMESTAMP}@test.com
    activationCode: ${config.test_environment.activation_code}
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
- name: login_as_admin
  command:
  - CreateAuthenticationRequest
  args:
    email: permdetails2-admin-${TIMESTAMP}@test.com
    password: ${config.test_data.company.admin_password}
  expect:
    success: true
tests:
- name: list_all_permission_groups
  command:
  - GetCompanyPermissionGroups
  expect:
    success: true
- name: get_administrators_permission_group_details
  command:
  - GetPermissionGroupDetails
  args:
    permissionGroupName: Administrators
  expect:
    success: true
    output_contains:
    - Administrators
- name: get_users_permission_group_details
  command:
  - GetPermissionGroupDetails
  args:
    permissionGroupName: Users
  expect:
    success: true
    output_contains:
    - Users
- name: get_bridges_permission_group_details
  command:
  - GetPermissionGroupDetails
  args:
    permissionGroupName: Bridges
  expect:
    success: true
    output_contains:
    - Bridges
- name: verify_cleanup_context
  command:
  - GetUserCompany
  expect:
    success: true
  description: Verify we're still authenticated before logout
- name: logout
  command:
  - DeleteUserRequest
  expect:
    success: true
  description: Logout and invalidate authentication token
