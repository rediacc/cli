name: "TFA_DEBUG_TEST"
description: "Minimal test to debug TFA enable issue"
executor: "commands/cli_main.py"

setup:
  - name: "create_test_company"
    command: ["CreateNewCompany"]
    args:
      companyName: "TFADebug-${TIMESTAMP}"
      email: "tfa-debug-${TIMESTAMP}@test.com"
      password: "Test@Pass123!"
      subscriptionPlan: "BUSINESS"
    expect:
      success: true
  
  - name: "activate_admin_account"
    command: ["ActivateUserAccount"]
    args:
      email: "tfa-debug-${TIMESTAMP}@test.com"
      activationCode: "111111"
      password: "Test@Pass123!"
    expect:
      success: true
  
  - name: "login_as_admin"
    command: ["login"]
    args:
      email: "tfa-debug-${TIMESTAMP}@test.com"
      password: "Test@Pass123!"
    expect:
      success: true

tests:
  # Step 1: Generate TFA secret
  - name: "generate_tfa_secret"
    command: ["UpdateUserTFA"]
    args:
      enable: true
      generateOnly: true
      userHash: "${hash(Test@Pass123!)}"
    expect:
      success: true
      output_contains: "TOTP"
    chain_export:
      tfa_secret: "${result.data.result[0].secret}"
    description: "Generate TOTP secret for debugging"
  
  # Step 2: Print debug info (using a dummy command)
  - name: "show_tfa_status"
    command: ["GetRequestAuthenticationStatus"]
    expect:
      success: true
    description: "Check TFA status after secret generation"
  
  # Step 3: Try to enable with hardcoded valid code
  # We'll generate multiple attempts with different time windows
  - name: "enable_tfa_attempt_1"
    command: ["UpdateUserTFA"]
    args:
      enable: true
      verificationCode: "${totp(chain.tfa_secret)}"
      secret: "${chain.tfa_secret}"
      confirmEnable: true
    expect:
      success: true
    description: "Enable TFA with current TOTP code"